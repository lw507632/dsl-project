/*
 * generated by Xtext 2.14.0
 */
package fr.unice.polytech.dsl.arduinoml.aml.formatting2

import com.google.inject.Inject
import fr.unice.polytech.dsl.arduinoml.App
import fr.unice.polytech.dsl.arduinoml.State
import fr.unice.polytech.dsl.arduinoml.aml.services.AmlGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class AmlFormatter extends AbstractFormatter2 {
	
	@Inject extension AmlGrammarAccess

	def dispatch void format(App app, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (brick : app.bricks) {
			brick.format
		}
		for (state : app.states) {
			state.format
		}
		for (condition : app.conditions) {
			condition.format
		}
	}

	def dispatch void format(State state, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (action : state.actions) {
			action.format
		}
		for (transition : state.transitions) {
			transition.format
		}
	}
	
	// TODO: implement for 
}
